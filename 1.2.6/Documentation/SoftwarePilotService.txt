[SoftwarePilotService]
	library to interact with the custom SoftwarePilot rest api service
	
	...
	
	Attributes
	----------
	ip_address : str
		the ip address to request the rest api
	port : int
		the port used to request the rest api
	url : str
		the url used to request the rest api
	
	Methods
	-------
	set_service(ip_address, port)
		initializes the variables needed to request the rest api
	get(extension)
		executes a get request to the service
	get_ip_address()
		returns the ip address to request the rest api
	get_port()
		returns the port to request the rest api
	get_input_shape()
		returns the input shape expected by the rest api
	get_output_keys()
		returns the output keys returned by the rest api
	get_download_path()
		returns the download path where images would be uploaded
	run(image)
		executes a post request to the service, including an image file and returning a json of shape output_keys
	
	[__init__(ip_address, port)]
		Parameters
		----------
		ip_address : str
			the ip address to request the rest api
		port: str
			the port used to request the rest api

	[set_service(ip_address, port)]
		initializes the variables needed to request the rest api
		
		Parameters
		----------
		ip_address : str
			the ip address to request the rest api
		port: str
			the port used to request the rest api
	
	[get(extension)]
		executes a get request to the service
		
		Parameters
		----------
		extension : str, optional
			parameter to make a get request to a specific extension (default = "")
			
		Return
		----------
		data : json
			the get response
	
	[get_ip_address()]
		returns the ip address to request the rest api
		
		Return
		----------
		ip_address : str
			the ip_address
	
	[get_port()]
		returns the port to request the rest api
		
		Return
		----------
		port : int
			the port
		
	[get_input_shape()]
		returns the input shape expected by the rest api
		
		Return
		----------
		data : int[]
			the input shape
	
	[get_output_keys()]
		returns the output keys returned by the rest api
		
		Return
		----------
		output_keys : str[]
			the output keys
	
	[get_download_path()]
		returns the download path where images would be uploaded
		
		Return
		----------
		download_path : str
			the image download path
	
	[run(image)]
		executes a post request to the service, including an image file and returning a json of shape output_keys
		
		Parameters
		----------
		image_path : str
			path to the image to upload
			
		Return
		----------
		data : any[]
			the image post response
	
