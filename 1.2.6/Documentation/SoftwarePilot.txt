[SoftwarePilot]
	A library to control drones and services through python scripts
	
	...
	
	Attributes
	----------
	docker : SoftwarePilotDocker
		docker wrapper library for easier interaction with SoftwarePilot
		
	Methods
	-------
	setup_drone(drone_type, connection_method, download_dir)
		initiates and returns a drone object of the chosen drone type
	setup_docker()
		iniates a docker client
	setup_service(ip_adress, port)
		initiates and returns a SoftwarePilotService object that connects to the given web api
	get_host_ip()
		gets the host's ip address
		
	[setup_drone(drone_type, connection_method, download_dir)]
		initiates and returns a drone object of the chosen drone type
		
		Parameters
		----------
		drone_type : DroneLibrary
			the drone type to be initiated
		connection_method : str
			the type of connection to be established to the drone
		download_dir : str,optional
			the download path for drone media (default = "None")
			
		Return
		----------
		drone : DroneLibrary
			the drone object
	
	[setup_docker()]
		iniates a docker client
		
	[setup_service(ip_adress, port)]
		initiates and returns a SoftwarePilotService object that connects to the given web api
		
		Parameters
		----------
		ip_address : str, optional
			the ip address to be used for the web api requests (default = "172.0.0.1")
		port : int
			the port to be used for the web api requests (default = 8000)
		
		Return
		----------
		service : SoftwarePilotService
			the service object meant to interact with the rest api
	
	[get_host_ip()]
		gets the host's ip address
		
		Return
		----------
		ip_address : str
			the host's ip address

